<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->
<html style="" class=" js no-touch csstransforms3d csstransitions"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<!-- Basic -->
<meta charset="utf-8">
<title>Assembly Registers</title>
<meta name="description" content="Assembly Registers - Learning assembly programming language in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge starting from Environment Setup, Status Register, Arithmetic Instructions, Conditional Execution, Loop Instructions, Logical Instructions, String Processing, Recursion, Arrays, Procedures, Constants, Macros and File Management.">
<meta name="keywords" content="Assembly, Programming, Language, Tutorials, Learning, Beginners, Basics, Environment Setup, Status Register, Arithmetic Instructions, Conditional Execution, Loop Instructions, Logical Instructions, String Processing, Recursion, Arrays, Procedures, Constants, Macros, File Management.">
<!-- base href="https://www.tutorialspoint.com/" -->
<link rel="shortcut icon" href="https://www.tutorialspoint.com/favicon.ico" type="image/x-icon">
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US">
<meta property="og:type" content="website">
<meta property="fb:app_id" content="471319149685276">
<meta property="og:site_name" content="www.tutorialspoint.com">
<meta name="robots" content="index, follow">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script src="Assembly%20Registers_files/ca-pub-7133395778201029.js"></script><script type="text/javascript" src="Assembly%20Registers_files/script-min-v4.js"></script>
<link rel="stylesheet" href="Assembly%20Registers_files/style-min.css">
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
pre.prettyprint.tryit {min-height:37px; background: #eee url(assembly_programming/images/try-it.jpg) top right no-repeat !important}select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #113b6a url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #113b6a !important;}
.submenu-item{ border-bottom: 2px solid #113b6a !important; border-top: 2px solid #113b6a !important }
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img src="Assembly%20Registers_files/loading-cg.gif" alt="" width="70" height="70">
   </div>
</div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="https://www.tutorialspoint.com/index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="Assembly%20Registers_files/logo.png">
      </a>
      </h1>			
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="https://www.tutorialspoint.com/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a href="http://www.sendfiles.net/"><i class="fa fa-send"></i> &nbsp;SENDfiles</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="Assembly%20Registers_files/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="https://www.tutorialspoint.com/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="https://www.tutorialspoint.com/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
         <!-- search code here  --> 
      <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 3555px!important"> <i class="icon icon-bars"></i> </button>
   </div>
  
   <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="https://www.tutorialspoint.com/index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown" id="liTL"><a class="dropdown" href="javascript:void(0);"><span class="tut-lib"> Tutorials Library <i class="fa-caret-down"></i></span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/tutor_connect/index.php"><i class="fa-user"> </i> Tutor Connect</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://www.tutorialspoint.com/videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off" type="text">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
         <div class="submenu-item sub-main-menu" id="top-sub-menu"></div>
         
      </div>
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="Assembly%20Registers_files/assembly-mini-logo.jpg" alt="Assembly Programming Tutorial">
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">Assembly Tutorial</li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/index.htm">Assembly - Home</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_introduction.htm">Assembly - Introduction</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_environment_setup.htm">Assembly - Environment Setup</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_basic_syntax.htm">Assembly - Basic Syntax</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_memory_segments.htm">Assembly - Memory Segments</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_registers.htm" style="background-color: rgb(214, 214, 214);">Assembly - Registers</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_system_calls.htm">Assembly - System Calls</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_addressing_modes.htm">Assembly - Addressing Modes</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_variables.htm">Assembly - Variables</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_constants.htm">Assembly - Constants</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_arithmetic_instructions.htm">Assembly - Arithmetic Instructions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_logical_instructions.htm">Assembly - Logical Instructions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_conditions.htm">Assembly - Conditions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_loops.htm">Assembly - Loops</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_numbers.htm">Assembly - Numbers</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_strings.htm">Assembly - Strings</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_arrays.htm">Assembly - Arrays</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_procedures.htm">Assembly - Procedures</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_recursion.htm">Assembly - Recursion</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_macros.htm">Assembly - Macros</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_file_management.htm">Assembly - File Management</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_memory_management.htm">Assembly - Memory Management</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Assembly Useful Resources</li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_quick_guide.htm">Assembly - Quick Guide</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_useful_resources.htm">Assembly - Useful Resources</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/assembly_programming/assembly_discussion.htm">Assembly - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="https://www.tutorialspoint.com/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="https://www.tutorialspoint.com/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Assembly - Registers</h1>
<div class="topgooglead">
<hr>
<div style="padding-bottom:5px;padding-left:10px;">Advertisements</div>
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript" src="Assembly%20Registers_files/show_ads.js"> 
</script><ins id="aswift_0_expand" style="display:inline-table;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:60px;margin:0;padding:0;position:relative;visibility:visible;width:468px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" width="468" height="60" frameborder="0"></iframe></ins></ins>
</div>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/assembly_programming/assembly_memory_segments.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/assembly_programming/assembly_system_calls.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr>
<p>Processor operations mostly involve processing data. This data can be
 stored in memory and accessed from thereon. However, reading data from 
and storing data into memory slows down the processor, as it involves 
complicated processes of sending the data request across the control bus
 and into the memory storage unit and getting the data through the same 
channel.</p> 
<p>To speed up the processor operations, the processor includes some internal memory storage locations, called <b>registers</b>.</p>
<p>The registers store data elements for processing without having to 
access the memory. A limited number of registers are built into the 
processor chip.</p>
<h2>Processor Registers</h2>
<p>There are ten 32-bit and six 16-bit processor registers in IA-32 architecture. The registers are grouped into three categories −</p>
<ul class="list">
<li>General registers,</li>
<li>Control registers, and</li>
<li>Segment registers.</li>
</ul>
<p>The general registers are further divided into the following groups −</p>
<ul class="list">
<li>Data registers,</li>
<li>Pointer registers, and</li>
<li>Index registers.</li>
</ul>
<h2>Data Registers</h2>
<p>Four 32-bit data registers are used for arithmetic, logical, and 
other operations. These 32-bit registers can be used in three ways −</p>
<ul class="list">
<li><p>As complete 32-bit data registers: EAX, EBX, ECX, EDX.</p></li>
<li><p>Lower halves of the 32-bit registers can be used as four 16-bit data registers: AX, BX, CX and DX.</p></li>
<li><p>Lower and higher halves of the above-mentioned four 16-bit 
registers can be used as eight 8-bit data registers: AH, AL, BH, BL, CH,
 CL, DH, and DL.</p></li>
</ul>
<img src="Assembly%20Registers_files/register1.jpg" alt="Data Registers">
<p>Some of these data registers have specific use in arithmetical operations.</p>
<p><b>AX is the primary accumulator</b>; it is used in input/output and 
most arithmetic instructions. For example, in multiplication operation, 
one operand is stored in EAX or AX or AL register according to the size 
of the operand.</p>
<p><b>BX is known as the base register</b>, as it could be used in indexed addressing.</p>
<p><b>CX is known as the count register</b>, as the ECX, CX registers store the loop count in iterative operations.</p>
<p><b>DX is known as the data register</b>. It is also used in 
input/output operations. It is also used with AX register along with DX 
for multiply and divide operations involving large values.</p>
<h2>Pointer Registers</h2>
<p>The pointer registers are 32-bit EIP, ESP, and EBP registers and 
corresponding 16-bit right portions IP, SP, and BP. There are three 
categories of pointer registers −</p>
<ul class="list">
<li><p><b>Instruction Pointer (IP)</b> − The 16-bit IP register stores 
the offset address of the next instruction to be executed. IP in 
association with the CS register (as CS:IP) gives the complete address 
of the current instruction in the code segment.</p></li>
<li><p><b>Stack Pointer (SP)</b> − The 16-bit SP register provides the 
offset value within the program stack. SP in association with the SS 
register (SS:SP) refers to be current position of data or address within
 the program stack.</p></li>
<li><p><b>Base Pointer (BP)</b> − The 16-bit BP register mainly helps in
 referencing the parameter variables passed to a subroutine. The address
 in SS register is combined with the offset in BP to get the location of
 the parameter. BP can also be combined with DI and SI as base register 
for special addressing.</p></li>
</ul>
<img src="Assembly%20Registers_files/register3.jpg" alt="Pointer Registers">
<h2>Index Registers</h2>
<p>The 32-bit index registers, ESI and EDI, and their 16-bit rightmost 
portions. SI and DI, are used for indexed addressing and sometimes used 
in addition and subtraction. There are two sets of index pointers −</p>
<ul class="list">
<li><p><b>Source Index (SI)</b> − It is used as source index for string operations.</p></li>
<li><p><b>Destination Index (DI)</b> − It is used as destination index for string operations.</p></li>
</ul>
<img src="Assembly%20Registers_files/register2.jpg" alt="Index Registers">
<h2>Control Registers</h2>
<p>The 32-bit instruction pointer register and the 32-bit flags register combined are considered as the control registers.</p>
<p>Many instructions involve comparisons and mathematical calculations 
and change the status of the flags and some other conditional 
instructions test the value of these status flags to take the control 
flow to other location.</p>
<p>The common flag bits are:</p>
<ul class="list">
<li><p><b>Overflow Flag (OF)</b> − It indicates the overflow of a high-order bit (leftmost bit) of data after a signed arithmetic operation.</p></li>
<li><p><b>Direction Flag (DF)</b> − It determines left or right 
direction for moving or comparing string data. When the DF value is 0, 
the string operation takes left-to-right direction and when the value is
 set to 1, the string operation takes right-to-left direction.</p></li>
<li><p><b>Interrupt Flag (IF)</b> − It determines whether the external 
interrupts like keyboard entry, etc., are to be ignored or processed. It
 disables the external interrupt when the value is 0 and enables 
interrupts when set to 1.</p></li>
<li><p><b>Trap Flag (TF)</b> − It allows setting the operation of the 
processor in single-step mode. The DEBUG program we used sets the trap 
flag, so we could step through the execution one instruction at a time.</p></li>
<li><p><b>Sign Flag (SF)</b> − It shows the sign of the result of an 
arithmetic operation. This flag is set according to the sign of a data 
item following the arithmetic operation. The sign is indicated by the 
high-order of leftmost bit. A positive result clears the value of SF to 0
 and negative result sets it to 1. </p></li>
<li><p><b>Zero Flag (ZF)</b> − It indicates the result of an arithmetic 
or comparison operation. A nonzero result clears the zero flag to 0, and
 a zero result sets it to 1.</p></li>
<li><p><b>Auxiliary Carry Flag (AF)</b> − It contains the carry from bit
 3 to bit 4 following an arithmetic operation; used for specialized 
arithmetic. The AF is set when a 1-byte arithmetic operation causes a 
carry from bit 3 into bit 4. </p></li>
<li><p><b>Parity Flag (PF)</b> − It indicates the total number of 1-bits
 in the result obtained from an arithmetic operation. An even number of 
1-bits clears the parity flag to 0 and an odd number of 1-bits sets the 
parity flag to 1.</p></li>
<li><p><b>Carry Flag (CF)</b> − It contains the carry of 0 or 1 from a 
high-order bit (leftmost) after an arithmetic operation. It also stores 
the contents of last bit of a <i>shift</i> or <i>rotate</i> operation.</p></li>
</ul>
<p>The following table indicates the position of flag bits in the 16-bit Flags register:</p>
<table class="table table-bordered">
<tbody><tr>
<th>Flag:</th>
<td></td>
<td></td>
<td></td>
<td></td>
<td>O</td>
<td>D</td>
<td>I</td>
<td>T</td>
<td>S</td>
<td>Z</td>
<td></td>
<td>A</td>
<td></td>
<td>P</td>
<td></td>
<td>C</td>
</tr>
<tr>
<th>Bit no:</th>
<td>15</td>
<td>14</td>
<td>13</td>
<td>12</td>
<td>11</td>
<td>10</td>
<td>9</td>
<td>8</td>
<td>7</td>
<td>6</td>
<td>5</td>
<td>4</td>
<td>3</td>
<td>2</td>
<td>1</td>
<td>0</td>
</tr>
</tbody></table>
<h2>Segment Registers</h2>
<p>Segments are specific areas defined in a program for containing data, code and stack. There are three main segments −</p>
<ul class="list">
<li><p><b>Code Segment</b> − It contains all the instructions to be 
executed. A 16-bit Code Segment register or CS register stores the 
starting address of the code segment.</p></li>
<li><p><b>Data Segment</b> − It contains data, constants and work areas.
 A 16-bit Data Segment register or DS register stores the starting 
address of the data segment.</p></li>
<li><p><b>Stack Segment</b> − It contains data and return addresses of 
procedures or subroutines. It is implemented as a 'stack' data 
structure. The Stack Segment register or SS register stores the starting
 address of the stack.</p></li>
</ul>
<p>Apart from the DS, CS and SS registers, there are other extra segment
 registers - ES (extra segment), FS and GS, which provide additional 
segments for storing data.</p>
<p>In assembly programming, a program needs to access the memory 
locations. All memory locations within a segment are relative to the 
starting address of the segment. A segment begins in an address evenly 
divisible by 16 or hexadecimal 10. So, the rightmost hex digit in all 
such memory addresses is 0, which is not generally stored in the segment
 registers.</p>
<p>The segment registers stores the starting addresses of a segment. To 
get the exact location of data or instruction within a segment, an 
offset value (or displacement) is required. To reference any memory 
location in a segment, the processor combines the segment address in the
 segment register with the offset value of the location.</p>
<h2>Example</h2>
<p>Look at the following simple program to understand the use of 
registers in assembly programming. This program displays 9 stars on the 
screen along with a simple message −</p>
<pre class="prettyprint notranslate tryit prettyprinted" style=""><span class="pln">section	</span><span class="pun">.</span><span class="pln">text
   global_start	 </span><span class="pun">;</span><span class="pln">must be declared </span><span class="kwd">for</span><span class="pln"> linker </span><span class="pun">(</span><span class="pln">gcc</span><span class="pun">)</span><span class="pln">
	
_start</span><span class="pun">:</span><span class="pln">	         </span><span class="pun">;</span><span class="pln">tell linker entry point
   mov	edx</span><span class="pun">,</span><span class="pln">len  </span><span class="pun">;</span><span class="pln">message length
   mov	ecx</span><span class="pun">,</span><span class="pln">msg  </span><span class="pun">;</span><span class="pln">message to write
   mov	ebx</span><span class="pun">,</span><span class="lit">1</span><span class="pln">    </span><span class="pun">;</span><span class="pln">file descriptor </span><span class="pun">(</span><span class="pln">stdout</span><span class="pun">)</span><span class="pln">
   mov	eax</span><span class="pun">,</span><span class="lit">4</span><span class="pln">    </span><span class="pun">;</span><span class="pln">system call number </span><span class="pun">(</span><span class="pln">sys_write</span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln">	</span><span class="lit">0x80</span><span class="pln">     </span><span class="pun">;</span><span class="pln">call kernel
	
   mov	edx</span><span class="pun">,</span><span class="lit">9</span><span class="pln">    </span><span class="pun">;</span><span class="pln">message length
   mov	ecx</span><span class="pun">,</span><span class="pln">s2   </span><span class="pun">;</span><span class="pln">message to write
   mov	ebx</span><span class="pun">,</span><span class="lit">1</span><span class="pln">    </span><span class="pun">;</span><span class="pln">file descriptor </span><span class="pun">(</span><span class="pln">stdout</span><span class="pun">)</span><span class="pln">
   mov	eax</span><span class="pun">,</span><span class="lit">4</span><span class="pln">    </span><span class="pun">;</span><span class="pln">system call number </span><span class="pun">(</span><span class="pln">sys_write</span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln">	</span><span class="lit">0x80</span><span class="pln">     </span><span class="pun">;</span><span class="pln">call kernel
	
   mov	eax</span><span class="pun">,</span><span class="lit">1</span><span class="pln">    </span><span class="pun">;</span><span class="pln">system call number </span><span class="pun">(</span><span class="pln">sys_exit</span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">int</span><span class="pln">	</span><span class="lit">0x80</span><span class="pln">     </span><span class="pun">;</span><span class="pln">call kernel
	
section	</span><span class="pun">.</span><span class="pln">data
msg db </span><span class="str">'Displaying 9 stars'</span><span class="pun">,</span><span class="lit">0xa</span><span class="pln"> </span><span class="pun">;</span><span class="pln">a message
len equ $ </span><span class="pun">-</span><span class="pln"> msg  </span><span class="pun">;</span><span class="pln">length of message
s2 times </span><span class="lit">9</span><span class="pln"> db </span><span class="str">'*'</span></pre>
<p>When the above code is compiled and executed, it produces the following result −</p>
<pre class="result notranslate">Displaying 9 stars
*********
</pre>
<hr>
<div class="pre-btn">
<a href="https://www.tutorialspoint.com/assembly_programming/assembly_memory_segments.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="https://www.tutorialspoint.com/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="pdf-btn">
<a href="https://www.tutorialspoint.com/assembly_programming/pdf/assembly_registers.pdf" title="Assembly Registers" target="_blank"><i class="icon icon-file-pdf-o big-font"></i> PDF</a>
</div>
<div class="nxt-btn">
<a href="https://www.tutorialspoint.com/assembly_programming/assembly_system_calls.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script type="text/javascript"><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript" src="Assembly%20Registers_files/show_ads.js">
</script><ins id="aswift_1_expand" style="display:inline-table;border:none;height:400px;margin:0;padding:0;position:relative;visibility:visible;width:580px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:400px;margin:0;padding:0;position:relative;visibility:visible;width:580px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" width="580" height="400" frameborder="0"></iframe></ins></ins>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/facebookIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/twitterIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/linkedinIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/googlePlusIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/StumbleUponIcon.jpg" alt="img">
</a>
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=http://www.tutorialspoint.com/assembly_programming/assembly_registers.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="Assembly%20Registers_files/reddit.jpg" alt="img">
</a>
</div>
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript" src="Assembly%20Registers_files/show_ads.js">
</script><ins id="aswift_2_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" width="300" height="250" frameborder="0"></iframe></ins></ins>
</div>
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script type="text/javascript" src="Assembly%20Registers_files/show_ads.js">
</script><ins id="aswift_3_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_3_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_3" name="aswift_3" style="left:0;position:absolute;top:0;" width="300" height="600" frameborder="0"></iframe></ins></ins>
</div>
<div class="rightgooglead">
<script type="text/javascript"><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script type="text/javascript" src="Assembly%20Registers_files/show_ads.js">
</script><ins id="aswift_4_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_4_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_4" name="aswift_4" style="left:0;position:absolute;top:0;" width="300" height="250" frameborder="0"></iframe></ins></ins>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="https://www.tutorialspoint.com/index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="Assembly%20Registers_files/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="https://www.tutorialspoint.com/about/tutorials_writing.htm">Write for us</a></li>
         <li><a href="https://www.tutorialspoint.com/about/faq.htm">FAQ's</a></li>
         <li><a href="https://www.tutorialspoint.com/about/about_helping.htm">Helping</a></li>
         <li><a href="https://www.tutorialspoint.com/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>© Copyright 2016. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}" type="text">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script type="text/javascript" src="Assembly%20Registers_files/custom-min.js"></script><a class="scroll-to-top visible" href="#" id="scrollToTop"><i class="icon icon-chevron-up icon-white"></i></a>
<script src="Assembly%20Registers_files/urchin.js">
</script>
<script type="text/javascript">
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
<script type="text/javascript" src="Assembly%20Registers_files/jquery.js"></script>
<script type="text/javascript">
   var tryit = new $.TryIt('assembly_programming/try_asm.php');
   tryit.compile();
</script><div id="source" style="display:none;"></div><div id="supportsource" style="display:none;"></div><div id="utilsource" style="display:none;"></div><div id="extrasource" style="display:none;"></div><div id="inputs" style="display:none;"></div><div id="filename" style="display:none;"></div>


<div class="autocomplete-suggestions "></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" role="dialog" tabindex="-1" style="display: none;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><button type="button" id="cboxPrevious"></button><button type="button" id="cboxNext"></button><button id="cboxSlideshow"></button><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none; max-width: none;"></div></div></body></html>