function ELF(bin){this.bin=bin;if(!this.checkMagicId()){throw"Invalid elf file."}this.parse();this.parsePrograms();this.parseSections();this.resolveSection();this.afterParse()}ELF.prototype.NOP=function(){};ELF.prototype.checkMagicId=function(){return this.bin.slice(0,4)=="ELF"};ELF.prototype.fields={};ELF.prototype.getField=function(name,def){if(def==undefined)def=false;if(this.fields[name]==undefined)return def;return this.fields[name]};ELF.prototype.readUIntMSB=function(offset,size){var str=this.bin.slice(offset,offset+size);var re="";for(var i=0;i<size;i++){re+=str[i].toString(16)}return parseInt(re,16)};ELF.prototype.readUIIntLSB=function(offset,size){var str=this.bin.slice(offset,offset+size);var re="";for(var i=size-1;i>=0;i--){re+=str[i].toString(16)}return parseInt(re,16)};ELF.prototype.readUInt=function(offset,size){if(this.endian=="lsb")return this.readUIIntLSB(offset,size);return this.readUIntMSB(offset,size)};ELF.prototype.readUInt8=function(offset){return this.bin[offset]};ELF.prototype.readUInt16=function(offset){return this.readUInt(offset,2)};ELF.prototype.readUInt32=function(offset){return this.readUInt(offset,4)};ELF.prototype.readUInt64=function(offset){return this.readUInt(offset,8)};ELF.prototype.parse=function(){this.fields.EI_CLASS=this.readUInt8(4);this.fields.EI_DATA=this.readUInt8(5);if(this.fields.EI_DATA==1){this.endian="lsb"}else if(this.fields.EI_DATA==2){this.endian="msb"}else{throw new Error("Invalid file encoding.")}this.fields.EI_VERSION=this.readUInt8(6);this.fields.EI_OSABI=this.readUInt8(7);switch(this.fields.EI_OSABI){case 1:this.fields.os="HP-UX";break;case 2:this.fields.os="NetBSD";break;case 3:this.fields.os="Linux";break;case 6:this.fields.os="Sun Solaris";break;case 7:this.fields.os="AIX";break;case 8:this.fields.os="IRIX";break;case 9:this.fields.os="FreeBSD";break;case 10:this.fields.os="Compaq TRU64 UNIX";break;case 11:this.fields.os="Novell Modesto";break;case 12:this.fields.os="Open BSD";break;case 13:this.fields.os="Open VMS";break;case 14:this.fields.os="HP-NonStop Kernel";break;case 15:this.fields.os="Amiga Research OS";break;case 16:this.fields.os="FenixOS";break;case 17:this.fields.os="Nuxi CloudABI";break;case 18:this.fields.os="Stratus Technologies OpenVOS";break;default:this.fields.os=undefined}this.fields.EI_ABIVERSION=this.readUInt8(8);this.fields.e_type=this.readUInt16(16);switch(this.fields.e_type){case 1:this.fields.e_type_string="relocatable";break;case 2:this.fields.e_type_string="executable";break;case 3:this.fields.e_type_string="shared";break;case 4:this.fields.e_type_string="core";break}this.fields.e_machine=this.readUInt16(18);this.fields.e_version=this.readUInt32(20);var offset=0;if(this.fileFormat()==32){this.fields.e_entry=this.readUInt32(24);this.fields.e_phoff=this.readUInt32(28);this.fields.e_shoff=this.readUInt32(32)}else if(this.fileFormat()==64){offset=12;this.fields.e_entry=this.readUInt64(24);this.fields.e_phoff=this.readUInt64(32);this.fields.e_shoff=this.readUInt64(40)}else{throw new Error("Unsupported file format.")}this.fields.e_flags=this.readUInt32(36+offset);this.fields.e_ehsize=this.readUInt16(40+offset);this.fields.e_phentsize=this.readUInt16(42+offset);this.fields.e_phnum=this.readUInt16(44+offset);this.fields.e_shentsize=this.readUInt16(46+offset);this.fields.e_shnum=this.readUInt16(48+offset);this.fields.e_shstrndx=this.readUInt16(50+offset)};ELF.prototype.sliceChunks=function(offset,count,size){var end=offset+count*size;if(end>this.bin.length)throw new Error("Failed to slick chunks.");var chunks=[];for(;offset<end;offset+=size)chunks.push(offset);return chunks};ELF.prototype.mapFlags=function(value,map){var res={};for(var bit=1;(value<0||bit<=value)&&bit!==0;bit<<=1)if(value&bit)res[map[bit]||bit]=true;return res};ELF.prototype.programs=[];ELF.prototype.types={0:"null",1:"load",2:"dynamic",3:"interp",4:"note",5:"shlib",6:"phdr",7:"tls",1684333904:"sunw_unwind",1685382480:"sunw_eh_frame",1685382481:"gnu_stack",1685382482:"gnu_relro",1879048186:"sunwbss",1879048187:"sunwstack",1879048188:"sunwdtrace",1879048189:"sunwcap"};ELF.prototype.parseProgram=function(offset){var re={};re.p_type=this.types[this.readUInt32(offset)];if(this.fileFormat()==32){re.p_offset=this.readUInt32(offset+4);re.p_vadder=this.readUInt32(offset+8);re.p_paddr=this.readUInt32(offset+12);re.p_filez=this.readUInt32(offset+16);re.p_memsz=this.readUInt32(offset+20);re.p_flags=this.readUInt32(offset+24);re.p_align=this.readUInt32(offset+28)}else{re.p_flags=this.readUInt32(offset+4);re.p_offset=this.readUInt64(offset+8);re.p_vadder=this.readUInt64(offset+16);re.p_paddr=this.readUInt64(offset+24);re.p_filez=this.readUInt64(offset+32);re.p_memsz=this.readUInt64(offset+40);re.p_align=this.readUInt64(offset+48)}re.p_flags=this.mapFlags(re.p_filez,{4:"r",2:"w",1:"x",1048576:"sunw_failure",2097152:"sunw_killed",4194304:"sunw_siginfo"});re.data=this.bin.slice(re.p_offset,re.p_offset+re.p_filez);this.programs.push(re)};ELF.prototype.parsePrograms=function(){if(this.fields.e_phoff===0||this.fields.e_phnum===0)return[];var programs=this.sliceChunks(this.fields.e_phoff,this.fields.e_phnum,this.fields.e_phentsize);programs.map(function(offset){this.parseProgram(offset)},this)};ELF.prototype.sectType={0:undefined,1:"progbits",2:"symtab",3:"strtab",4:"rela",5:"hash",6:"dynamic",7:"note",8:"nobits",9:"rel",10:"shlib",11:"dynsym",12:"unknown12",13:"unknown13",14:"init_array",15:"fini_array",16:"preinit_array",17:"group",18:"symtab_shndx",19:"num",1610612736:"loos",1879048175:"sunw_capchain",1879048176:"sunw_capinfo",1879048177:"sunw_symsort",1879048178:"sunw_tlssort",1879048179:"sunw_ldynsym",1879048180:"sunw_dof",1879048185:"sunw_debug",1879048186:"sunw_move",1879048187:"sunw_comdat",1879048188:"sunw_syminfo",1879048189:"sunw_verdef",1879048190:"sunw_verneed",1879048191:"hios",1879048181:"gnu_attributes",1879048182:"gnu_hash",1879048183:"gnu_liblist",1879048184:"checksum"};ELF.prototype.sectFlags={1:"write",2:"alloc",4:"execinstr",16:"merge",32:"strings",64:"info_link",128:"link_order",256:"os_nonconforming",512:"group",1024:"tls"};ELF.prototype.sections=[];ELF.prototype.parseSections=function(){if(this.fields.e_shoff===0||this.fields.e_shnum===0)return[];var sections=this.sliceChunks(this.fields.e_shoff,this.fields.e_shnum,this.fields.e_shentsize);sections.map(function(offset){this.parseSection(offset)},this)};ELF.prototype.parseSection=function(offset){var section={};section.name=this.readUInt32(offset);section.type=this.readUInt32(offset+4);if(this.fileFormat()==32){section.flags=this.readUInt32(offset+8);section.addr=this.readUInt32(offset+12);section.off=this.readUInt32(offset+16);section.size=this.readUInt32(offset+20);section.link=this.readUInt32(offset+24);section.info=this.readUInt32(offset+28);section.addralign=this.readUInt32(offset+32);section.entsize=this.readUInt32(offset+36)}else{section.flags=this.readUInt64(offset+8);section.addr=this.readUInt64(offset+16);section.off=this.readUInt64(offset+24);section.size=this.readUInt64(offset+32);section.link=this.readUInt32(offset+40);section.info=this.readUInt32(offset+44);section.addralign=this.readUInt64(offset+56);section.entsize=this.readUInt64(offset+54)}section.data=this.bin.slice(section.off,section.off+section.size);section.type=this.sectType[section.type]||section.type;section.flags=this.mapFlags(section.flags,this.sectFlags);this.sections.push(section)};ELF.prototype.resolveStr=function(strtab,offset){for(var i=offset;i<strtab.length&&strtab[i]!==0;i++){}return strtab.slice(offset,i).toString()};ELF.prototype.resolveSection=function(){var strtab=this.sections[this.fields.e_shstrndx];var sections={};this.sections.map(function(section){section.name=this.resolveStr(strtab.data,section.name);sections[section.name]=section},this);this.sections=sections};ELF.prototype.fileFormat=function(){var EI_CLASS=this.getField("EI_CLASS",1);return 32*EI_CLASS};ELF.prototype.opcodes={};ELF.prototype.opcode=function(byte,code,requiredBytes,name,description){if(requiredBytes==undefined)requiredBytes=this.fileFormat()/8;if(code==undefined)code=this.NOP;return ELF.prototype.opcodes[byte]={name:name,bytes:requiredBytes,code:code,description:description}};ELF.prototype.sysAPIs={};ELF.prototype.sysAPI=function(eax,code,name){this.sysAPIs[eax]={code:code,name:name}};ELF.prototype.modules=[];ELF.prototype.module=function(method){this.modules.push(method)};ELF.prototype.afterParse=function(){this.modules.forEach(function(method){method()})};var elf=exports;elf.Create=function(name){return new ELF(name)};ELF.prototype.execute=function(){var code=this.sections[".text"].data;this.runSection(code)};ELF.prototype.runSection=function(section){var pointer=0,opcode,iv,re;while(pointer<section.length){opcode=this.opcodes[section[pointer]];iv=section.slice(pointer+1,pointer+opcode.bytes+1);re=opcode.code(iv,this);pointer+=opcode.bytes+1;if(typeof re=="object"){if(re.pointer!==undefined){pointer=re.pointer}}}};ELF.prototype.sysAPI(4,function(that,ebx,ecx,edx){var data=that.sections[".data"].data.slice(ecx,ecx+edx).toString();that.FileSystem.write(ebx,data)},"sys_write");ELF.prototype.memory={a0:"\x00\x00",ah:"\x00",al:"\x00",b0:"\x00\x00",bh:"\x00",bl:"\x00",c0:"\x00\x00",ch:"\x00",cl:"\x00",d0:"\x00\x00",dh:"\x00",dl:"\x00"};ELF.prototype.memory.getEAX=function(){return this.a0+this.ah+this.al};ELF.prototype.memory.setEAX=function(inp){if(inp.length!==4)return;this.a0=inp.slice(0,2);this.ah=inp[2];this.al=inp[3]};ELF.prototype.memory.setAH=function(ah){if(ah.length!==1)return;this.ah=ah};ELF.prototype.memory.setAL=function(al){if(al.length!==1)return;this.al=al};ELF.prototype.memory.getEBX=function(){return this.b0+this.bh+this.bl};ELF.prototype.memory.setEBX=function(inp){if(inp.length!==4)return;this.b0=inp.slice(0,2);this.bh=inp[2];this.bl=inp[3]};ELF.prototype.memory.setBH=function(bh){if(bh.length!==1)return;this.bh=bh};ELF.prototype.memory.setBL=function(bl){if(bl.length!==1)return;this.bl=bl};ELF.prototype.memory.getECX=function(){return this.c0+this.ch+this.cl};ELF.prototype.memory.setECX=function(inp){if(inp.length!==4)return;this.c0=inp.slice(0,2);this.ch=inp[2];this.cl=inp[3]};ELF.prototype.memory.setCH=function(ch){if(ch.length!==1)return;this.ch=ch};ELF.prototype.memory.setCL=function(cl){if(cl.length!==1)return;this.cl=cl};ELF.prototype.memory.getEDX=function(){return this.d0+this.dh+this.dl};ELF.prototype.memory.setEDX=function(inp){if(inp.length!==4)return;this.d0=inp.slice(0,2);this.dh=inp[2];this.dl=inp[3]};ELF.prototype.memory.setDH=function(dh){if(dh.length!==1)return;this.dh=dh};ELF.prototype.memory.setDL=function(dl){if(dl.length!==1)return;this.dl=dl};ELF.prototype.opcode(184,function(IV,that){that.memory.setEAX(IV)},4,"mov eax, IV");ELF.prototype.opcode(187,function(IV,that){that.memory.setEBX(IV)},4,"mov ebx, IV");ELF.prototype.opcode(185,function(IV,that){that.memory.setECX(IV)},4,"mov ecx, IV");ELF.prototype.opcode(205,function(IV,that){var syscall=that.memory.getEAX().charCodeAt(0);if(that.sysAPIs[syscall]!==undefined){that.sysAPIs[syscall].code(that,that.memory.getEBX().charCodeAt(0),that.memory.getECX().charCodeAt(0),that.memory.getEDX().charCodeAt(0))}},1,"int IV");ELF.prototype.opcode(186,function(IV,that){that.memory.setEDX(IV)},4,"mov edx, IV");ELF.prototype.module(function(){var machine=null,e_machine=ELF.prototype.getField("e_machine");switch(e_machine){case 1:machine="AT&T WE 32100";break;case 2:machine="SPARC";break;case 3:machine="Intel 80386";break;case 4:machine="Motorola 68000";break;case 5:machine="Motorola 88000";break;case 6:machine="Intel MCU";break;case 7:machine="Intel 80860";break;case 8:machine="MIPS I Architecture";break;case 9:machine="IBM System/370 Processor";break;case 10:machine="MIPS RS3000 Little-endian";break;case 15:machine="Hewlett-Packard PA-RISC";break;case 16:machine="Reserved for future use";break;case 17:machine="Fujitsu VPP500";break;case 18:machine="Enhanced instruction set SPARC";break;case 19:machine="Intel 80960";break;case 20:machine="PowerPC";break;case 21:machine="64-bit PowerPC";break;case 22:machine="IBM System/390 Processor";break;case 23:machine="IBM SPU/SPC";break;case 36:machine="NEC V800";break;case 37:machine="Fujitsu FR20";break;case 38:machine="TRW RH-32";break;case 39:machine="Motorola RCE";break;case 40:machine="ARM 32-bit architecture (AARCH32)";break;case 41:machine="Digital Alpha";break;case 42:machine="Hitachi SH";break;case 43:machine="SPARC Version 9";break;case 44:machine="Siemens TriCore embedded processor";break;case 45:machine="Argonaut RISC Core, Argonaut Technologies Inc.";break;case 46:machine="Hitachi H8/300";break;case 47:machine="Hitachi H8/300H";break;case 48:machine="Hitachi H8S";break;case 49:machine="Hitachi H8/500";break;case 50:machine="Intel IA-64 processor architecture";break;case 51:machine="Stanford MIPS-X";break;case 52:machine="Motorola ColdFire";break;case 53:machine="Motorola M68HC12";break;case 54:machine="Fujitsu MMA Multimedia Accelerator";break;case 55:machine="Siemens PCP";break;case 56:machine="Sony nCPU embedded RISC processor";break;case 57:machine="Denso NDR1 microprocessor";break;case 58:machine="Motorola Star*Core processor";break;case 59:machine="Toyota ME16 processor";break;case 60:machine="STMicroelectronics ST100 processor";break;case 61:machine="Advanced Logic Corp. TinyJ embedded processor family";break;case 62:machine="AMD x86-64 architecture";break;case 63:machine="Sony DSP Processor";break;case 64:machine="Digital Equipment Corp. PDP-10";break;case 65:machine="Digital Equipment Corp. PDP-11";break;case 66:machine="Siemens FX66 microcontroller";break;case 67:machine="STMicroelectronics ST9+ 8/16 bit microcontroller";break;case 68:machine="STMicroelectronics ST7 8-bit microcontroller";break;case 69:machine="Motorola MC68HC16 Microcontroller";break;case 70:machine="Motorola MC68HC11 Microcontroller";break;case 71:machine="Motorola MC68HC08 Microcontroller";break;case 72:machine="Motorola MC68HC05 Microcontroller";break;case 73:machine="Silicon Graphics SVx";break;case 74:machine="STMicroelectronics ST19 8-bit microcontroller";break;case 75:machine="Digital VAX";break;case 76:machine="Axis Communications 32-bit embedded processor";break;case 77:machine="Infineon Technologies 32-bit embedded processor";break;case 78:machine="Element 14 64-bit DSP Processor";break;case 79:machine="LSI Logic 16-bit DSP Processor";break;case 80:machine="Donald Knuth's educational 64-bit processor";break;case 81:machine="Harvard University machine-independent object files";break;case 82:machine="SiTera Prism";break;case 83:machine="Atmel AVR 8-bit microcontroller";break;case 84:machine="Fujitsu FR30";break;case 85:machine="Mitsubishi D10V";break;case 86:machine="Mitsubishi D30V";break;case 87:machine="NEC v850";break;case 88:machine="Mitsubishi M32R";break;case 89:machine="Matsushita MN10300";break;case 90:machine="Matsushita MN10200";break;case 91:machine="picoJava";break;case 92:machine="OpenRISC 32-bit embedded processor";break;case 93:machine="ARC International ARCompact processor (old spelling/synonym: EM_ARC_A5)";break;case 94:machine="Tensilica Xtensa Architecture";break;case 95:machine="Alphamosaic VideoCore processor";break;case 96:machine="Thompson Multimedia General Purpose Processor";break;case 97:machine="National Semiconductor 32000 series";break;case 98:machine="Tenor Network TPC processor";break;case 99:machine="Trebia SNP 1000 processor";break;case 100:machine="STMicroelectronics (www.st.com) ST200 microcontroller";break;case 101:machine="Ubicom IP2xxx microcontroller family";break;case 102:machine="MAX Processor";break;case 103:machine="National Semiconductor CompactRISC microprocessor";break;case 104:machine="Fujitsu F2MC16";break;case 105:machine="Texas Instruments embedded microcontroller msp430";break;case 106:machine="Analog Devices Blackfin (DSP) processor";break;case 107:machine="S1C33 Family of Seiko Epson processors";break;case 108:machine="Sharp embedded microprocessor";break;case 109:machine="Arca RISC Microprocessor";break;case 110:machine="Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University";break;case 111:machine="eXcess: 16/32/64-bit configurable embedded CPU";break;case 112:machine="Icera Semiconductor Inc. Deep Execution Processor";break;case 113:machine="Altera Nios II soft-core processor";break;case 114:machine="National Semiconductor CompactRISC CRX microprocessor";break;case 115:machine="Motorola XGATE embedded processor";break;case 116:machine="Infineon C16x/XC16x processor";break;case 117:machine="Renesas M16C series microprocessors";break;case 118:machine="Microchip Technology dsPIC30F Digital Signal Controller";break;case 119:machine="Freescale Communication Engine RISC core";break;case 120:machine="Renesas M32C series microprocessors";break;case 131:machine="Altium TSK3000 core";break;case 132:machine="Freescale RS08 embedded processor";break;case 133:machine="Analog Devices SHARC family of 32-bit DSP processors";break;case 134:machine="Cyan Technology eCOG2 microprocessor";break;case 135:machine="Sunplus S+core7 RISC processor";break;case 136:machine="New Japan Radio (NJR) 24-bit DSP Processor";break;case 137:machine="Broadcom VideoCore III processor";break;case 138:machine="RISC processor for Lattice FPGA architecture";break;case 139:machine="Seiko Epson C17 family";break;case 140:machine="The Texas Instruments TMS320C6000 DSP family";break;case 141:machine="The Texas Instruments TMS320C2000 DSP family";break;case 142:machine="The Texas Instruments TMS320C55x DSP family";break;case 143:machine="Texas Instruments Application Specific RISC Processor, 32bit fetch";break;case 144:machine="Texas Instruments Programmable Realtime Unit";break;case 160:machine="STMicroelectronics 64bit VLIW Data Signal Processor";break;case 161:machine="Cypress M8C microprocessor";break;case 162:machine="Renesas R32C series microprocessors";break;case 163:machine="NXP Semiconductors TriMedia architecture family";break;case 164:machine="QUALCOMM DSP6 Processor";break;case 165:machine="Intel 8051 and variants";break;case 166:machine="STMicroelectronics STxP7x family of configurable and extensible RISC processors";break;case 167:machine="Andes Technology compact code size embedded RISC processor family";break;case 168:machine="Cyan Technology eCOG1X family";break;case 168:machine="Cyan Technology eCOG1X family";break;case 169:machine="Dallas Semiconductor MAXQ30 Core Micro-controllers";break;case 170:machine="New Japan Radio (NJR) 16-bit DSP Processor";break;case 171:machine="M2000 Reconfigurable RISC Microprocessor";break;case 172:machine="Cray Inc. NV2 vector architecture";break;case 173:machine="Renesas RX family";break;case 174:machine="Imagination Technologies META processor architecture";break;case 175:machine="MCST Elbrus general purpose hardware architecture";break;case 176:machine="Cyan Technology eCOG16 family";break;case 177:machine="National Semiconductor CompactRISC CR16 16-bit microprocessor";break;case 178:machine="Freescale Extended Time Processing Unit";break;case 179:machine="Infineon Technologies SLE9X core";break;case 180:machine="Intel L10M";break;case 181:machine="Intel K10M";break;case 182:machine="Reserved for future Intel use";break;case 183:machine="ARM 64-bit architecture (AARCH64)";break;case 184:machine="Reserved for future ARM use";break;case 185:machine="Atmel Corporation 32-bit microprocessor family";break;case 186:machine="STMicroeletronics STM8 8-bit microcontroller";break;case 187:machine="Tilera TILE64 multicore architecture family";break;case 188:machine="Tilera TILEPro multicore architecture family";break;case 189:machine="Xilinx MicroBlaze 32-bit RISC soft processor core";break;case 190:machine="NVIDIA CUDA architecture";break;case 191:machine="Tilera TILE-Gx multicore architecture family";break;case 192:machine="CloudShield architecture family";break;case 193:machine="KIPO-KAIST Core-A 1st generation processor family";break;case 194:machine="KIPO-KAIST Core-A 2nd generation processor family";break;case 195:machine="Synopsys ARCompact V2";break;case 196:machine="Open8 8-bit RISC soft processor core";break;case 197:machine="Renesas RL78 family";break;case 198:machine="Broadcom VideoCore V processor";break;case 199:machine="Renesas 78KOR family";break;case 200:machine="Freescale 56800EX Digital Signal Controller (DSC)";break;case 201:machine="Beyond BA1 CPU architecture";break;case 202:machine="Beyond BA2 CPU architecture";break;case 203:machine="XMOS xCORE processor family";break;case 204:machine="Microchip 8-bit PIC(r) family";break;case 205:machine="Reserved by Intel";break;case 206:machine="Reserved by Intel";break;case 207:machine="Reserved by Intel";break;case 208:machine="Reserved by Intel";break;case 209:machine="Reserved by Intel";break;case 210:machine="KM211 KM32 32-bit processor";break;case 211:machine="KM211 KMX32 32-bit processor";break;case 212:machine="KM211 KMX16 16-bit processor";break;case 213:machine="KM211 KMX8 8-bit processor";break;case 214:machine="KM211 KVARC processor";break;case 215:machine="Paneve CDP architecture family";break;case 216:machine="Cognitive Smart Memory Processor";break;case 217:machine="Bluechip Systems CoolEngine";break;case 218:machine="Nanoradio Optimized RISC";break;case 219:machine="CSR Kalimba architecture family";break;case 220:machine="Zilog Z80";break;case 221:machine="Controls and Data Services VISIUMcore processor";break;case 222:machine="FTDI Chip FT32 high performance 32-bit RISC architecture";break;case 223:machine="Moxie processor family";break;case 224:machine="AMD GPU architecture";break}if(machine==null){if(e_machine>=11&&em_machine<=14){ELF.prototype.fields.machine="Reserved for future use";return}if(e_machine>=24&&em_machine<=35){ELF.prototype.fields.machine="Reserved for future use";return}if(e_machine>=121&&em_machine<=130){ELF.prototype.fields.machine="Reserved for future use";return}if(e_machine>=145&&em_machine<=159){ELF.prototype.fields.machine="Reserved for future use";return}if(e_machine>=145&&em_machine<=159){ELF.prototype.fields.machine="Reserved for future use";return}}ELF.prototype.fields.machine=machine});ELF.prototype.FileSystem={};ELF.prototype.FileSystem.storage={useLC:typeof localStorage!=="undefined",isNode:typeof module!=="undefined"&&module.exports,files:{},links:{id2name:{},name2id:{},last_id:2},id2name:function(id){if(id<3){if(id==0)return"sys/stdin";if(id==1)return"sys/stdout";if(id==2)return"sys/stderr"}if(this.useLC){return localStorage.getItem("elf-i2n_"+id)}else{return this.links.id2name[id]}},name2id:function(name){if(name==="sys/stdin")return 0;if(name=="sys/stdout")return 1;if(name=="sys/stderr")return 2;if(this.useLC){return localStorage.getItem("elf-n2i_"+name)}else{return this.links.name2id[name]}},fileExists:function(file_name){if(this.useLC){return localStorage.getItem("elf-n2i_"+name)!==undefined}else{return this.links.name2id[file_name]!==undefined}},fileWrite:function(file_id,data){if(file_id==1){if(this.isNode)process.stdout.write(data);else console.log(data)}if(file_id==2){if(this.isNode)process.stderr.write(data);else console.error(data)}if(this.useLC){localStorage.setItem("file_"+file_id,data)}else{this.files[file_id]=data}},readFile:function(file_id){if(file_id==0){return""}if(this.useLC){return localStorage.getItem("file_"+file_id)}else{return this.files[file_id]}},createFile:function(filename){var re;if(this.useLC){re=localStorage.getItem("elf-n2i_"+filename);if(re==undefined){if(localStorage.getItem("last_id")==undefined)localStorage.setItem("last_id",2);re=localStorage.getItem("last_id")+1;localStorage.setItem("last_id",re);localStorage.setItem("elf-n2i_"+filename,re);localStorage.setItem("elf-i2n_"+re,filename)}return re}else{re=++this.links.last_id;this.links.name2id[filename]=re;this.links.id2name[re]=filename;return re}},listFiles:function(){}};ELF.prototype.FileSystem.create=function(filename){return this.storage.createFile(filename)};ELF.prototype.FileSystem.write=function(file_id,data){return this.storage.fileWrite(file_id,data)};ELF.prototype.FileSystem.open=function(file_id){};